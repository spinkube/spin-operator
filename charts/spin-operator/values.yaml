## Spin Operator configuration

## controllerManager represents the Spin Operator deployment.
controllerManager:
  ## manager represents the Spin Operator container.
  manager:
    ## args are the default arguments to supply to the operator.
    ## In general, these should be left as-is.
    args:
    - --health-probe-bind-address=:8082
    - --metrics-bind-address=:8443
    - --metrics-cert-path=/tmp/k8s-metrics-server/metrics-certs
    - --leader-elect
    - --enable-webhooks
    ## containerSecurityContext defines privilege and access control for the
    ## container.
    ## See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
    ## image indicates which repository and tag combination will be used for
    ## pulling the operator image.
    image:
      repository: ghcr.io/spinkube/spin-operator
      ## By default, .Chart.AppVersion is used as the tag.
      ## Updating this value to a version not aligned with the current chart
      ## version may lead to unexpected or broken behavior.
      # tag: latest
    imagePullPolicy: IfNotPresent
    ## resources represent default cpu/mem limits for the operator container.
    resources:
      # TODO: update these per https://github.com/spinkube/spin-operator/issues/21
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 64Mi

  # replicas represent how many pod replicas of the controllerManager to run.
  replicas: 1

  # serviceAccount represents configuration for the controllerManager Service Account.
  # See https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
    annotations: {}

## kubernetesClusterDomain represents the domain used for service DNS within the cluster.
kubernetesClusterDomain: cluster.local

## metricsService configuration.
## This configuration should only be updated in tandem with corresponding
## controller configuration.
metricsService:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  type: ClusterIP

## webhookService configuration.
webhookService:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  type: ClusterIP
